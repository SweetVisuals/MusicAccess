{"version":3,"file":"kotlin.js","sources":["../../../src/prism/languages/kotlin.js"],"sourcesContent":["import { languages } from '../core.js';\nimport { boolean, clikeComment, clikePunctuation } from '../utils/patterns.js';\n\nvar interpolationInside = {\n\t'interpolation-punctuation': {\n\t\tpattern: /^\\$\\{?|\\}$/,\n\t\talias: 'punctuation'\n\t},\n\t'expression': {\n\t\tpattern: /[\\s\\S]+/,\n\t}\n};\n\ninterpolationInside.expression.inside = languages.kts = languages.kt = languages.kotlin = {\n\t// https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n\t'string-literal': [\n\t\t{\n\t\t\tpattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n\t\t\talias: 'multiline',\n\t\t\tinside: {\n\t\t\t\t'interpolation': {\n\t\t\t\t\tpattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n\t\t\t\t\tinside: interpolationInside\n\t\t\t\t},\n\t\t\t\t'string': /[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /\"(?:\\\\.|[^\\\\\\n\"$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n\t\t\talias: 'singleline',\n\t\t\tinside: {\n\t\t\t\t'interpolation': {\n\t\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: interpolationInside\n\t\t\t\t},\n\t\t\t\t'string': /[\\s\\S]+/\n\t\t\t}\n\t\t}\n\t],\n\t'char': {\n\t\t// https://kotlinlang.org/spec/expressions.html#character-literals\n\t\tpattern: /'(?:[^\\\\\\n']|\\\\(?:.|u[a-fA-F\\d]{0,4}))'/g,\n\t\tgreedy: true\n\t},\n\t'comment': clikeComment(),\n\t'annotation': {\n\t\tpattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n\t\talias: 'builtin'\n\t},\n\t'keyword': {\n\t\t// The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n\t\tpattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n\t\tlookbehind: true\n\t},\n\t'boolean': boolean,\n\t'label': {\n\t\tpattern: /\\b\\w+@|@\\w+/,\n\t\talias: 'symbol'\n\t},\n\t'function': {\n\t\tpattern: /(?:`[^\\n`]+`|\\b\\w+)(?=\\s*\\()|(\\.)(?:`[^\\n`]+`|\\w+)(?=\\s*\\{)/g,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'number': /\\b(?:0[xX][a-fA-F\\d]+(?:_[a-fA-F\\d]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n\t'operator': /--|\\+\\+|&&|\\|\\||->|[!=]==|!!|[%!=<>/*+-]=?|[?:]:?|\\.\\.|\\b(?:and|inv|shl|u?shr|x?or)\\b/,\n\t'punctuation': clikePunctuation\n};\n"],"names":[],"mappings":";;AAGA,IAAI,sBAAsB;AAAA,EACzB,6BAA6B;AAAA,IAC5B,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EACD,cAAc;AAAA,IACb,SAAS;AAAA,EACX;AACA;AAEA,oBAAoB,WAAW,SAAS,UAAU,MAAM,UAAU,KAAK,UAAU,SAAS;AAAA;AAAA,EAEzF,kBAAkB;AAAA,IACjB;AAAA,MACC,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,QACP,iBAAiB;AAAA,UAChB,SAAS;AAAA,UACT,QAAQ;AAAA,QACR;AAAA,QACD,UAAU;AAAA,MACd;AAAA,IACG;AAAA,IACD;AAAA,MACC,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,QACP,iBAAiB;AAAA,UAChB,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA,QACR;AAAA,QACD,UAAU;AAAA,MACd;AAAA,IACA;AAAA,EACE;AAAA,EACD,QAAQ;AAAA;AAAA,IAEP,SAAS;AAAA,IACT,QAAQ;AAAA,EACR;AAAA,EACD,WAAW,aAAc;AAAA,EACzB,cAAc;AAAA,IACb,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EACD,WAAW;AAAA;AAAA,IAEV,SAAS;AAAA,IACT,YAAY;AAAA,EACZ;AAAA,EACD,WAAW;AAAA,EACX,SAAS;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EACD,YAAY;AAAA,IACX,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,EACR;AAAA,EACD,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,eAAe;AAChB;"}