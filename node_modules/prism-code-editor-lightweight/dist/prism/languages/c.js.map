{"version":3,"file":"c.js","sources":["../../../src/prism/languages/c.js"],"sourcesContent":["import { languages } from '../core.js';\nimport { clikePunctuation } from '../utils/patterns.js';\n\nvar char = {\n\t// https://en.cppreference.com/w/c/language/character_constant\n\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\\\n']){0,32}'/g,\n\tgreedy: true\n};\n\nvar comment = {\n\tpattern: /\\/\\/(?:[^\\\\\\n]|\\\\\\n?)*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/g,\n\tgreedy: true\n};\n\nvar string = {\n\t// https://en.cppreference.com/w/c/language/string_literal\n\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\\n\"])*\"/g,\n\tgreedy: true\n};\n\nvar macroExpression = {\n\tpattern: /\\S[\\s\\S]*/\n};\n\nmacroExpression.inside = languages.c = {\n\t'comment': comment,\n\t'char': char,\n\t'macro': {\n\t\t// allow for multiline macro definitions\n\t\t// spaces after the # character compile fine with gcc\n\t\tpattern: /(^[ \\t]*)#\\s*[a-z](?:[^\\\\\\n/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\[\\s\\S])*/img,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t'string': [\n\t\t\t\t{\n\t\t\t\t\t// highlight the path of the include statement as a string\n\t\t\t\t\tpattern: /^(#\\s*include\\s*)<[^>]+>/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\tstring\n\t\t\t],\n\t\t\t'char': char,\n\t\t\t'comment': comment,\n\t\t\t'macro-name': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^#\\s*define\\s+)\\w+/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'function'\n\t\t\t\t}\n\t\t\t],\n\t\t\t// highlight macro directives as keywords\n\t\t\t'directive': {\n\t\t\t\tpattern: /^(#\\s*)[a-z]+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t'directive-hash': /^#/,\n\t\t\t'punctuation': /##|\\\\(?=\\n)/,\n\t\t\t'expression': macroExpression\n\t\t}\n\t},\n\t'string': string,\n\t'class-name': {\n\t\tpattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n\t\tlookbehind: true\n\t},\n\t'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n\t// highlight predefined macros as constants\n\t'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/,\n\t'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n\t'number': /(?:\\b0x(?:[a-f\\d]+(?:\\.[a-f\\d]*)?|\\.[a-f\\d]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n\t'operator': /->|([&|:+-])\\1|[?:~]|>>=?|<<=?|[%&|^!=<>/*+-]=?/,\n\t'punctuation': clikePunctuation\n};\n"],"names":[],"mappings":";;AAGA,IAAI,OAAO;AAAA;AAAA,EAEV,SAAS;AAAA,EACT,QAAQ;AACT;AAEA,IAAI,UAAU;AAAA,EACb,SAAS;AAAA,EACT,QAAQ;AACT;AAEA,IAAI,SAAS;AAAA;AAAA,EAEZ,SAAS;AAAA,EACT,QAAQ;AACT;AAEA,IAAI,kBAAkB;AAAA,EACrB,SAAS;AACV;AAEA,gBAAgB,SAAS,UAAU,IAAI;AAAA,EACtC,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,SAAS;AAAA;AAAA;AAAA,IAGR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,MACP,UAAU;AAAA,QACT;AAAA;AAAA,UAEC,SAAS;AAAA,UACT,YAAY;AAAA,QACZ;AAAA,QACD;AAAA,MACA;AAAA,MACD,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,cAAc;AAAA,QACb;AAAA,UACC,SAAS;AAAA,UACT,YAAY;AAAA,QACZ;AAAA,QACD;AAAA,UACC,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,QACZ;AAAA,MACI;AAAA;AAAA,MAED,aAAa;AAAA,QACZ,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,OAAO;AAAA,MACP;AAAA,MACD,kBAAkB;AAAA,MAClB,eAAe;AAAA,MACf,cAAc;AAAA,IACjB;AAAA,EACE;AAAA,EACD,UAAU;AAAA,EACV,cAAc;AAAA,IACb,SAAS;AAAA,IACT,YAAY;AAAA,EACZ;AAAA,EACD,WAAW;AAAA;AAAA,EAEX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,eAAe;AAChB;"}