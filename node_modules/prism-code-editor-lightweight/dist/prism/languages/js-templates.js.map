{"version":3,"file":"js-templates.js","sources":["../../../src/prism/languages/js-templates.js"],"sourcesContent":["import { languages, tokenize, rest } from '../core.js';\nimport { embeddedIn } from '../utils/templating.js';\nimport './javascript.js';\n\nvar js = languages.js;\nvar templateString = js['template-string'];\n\n// see the pattern in prism-javascript.js\nvar templateLiteralPattern = templateString.pattern.source;\nvar interpolationPattern = templateString.inside.interpolation.pattern;\n\n/**\n * Creates a new pattern to match a template string with a special tag.\n *\n * This will return `undefined` if there is no grammar with the given language id.\n *\n * @param {string} language The language id of the embedded language. E.g. `markdown`.\n * @param {string} tag The regex pattern to match the tag.\n * @returns {object | undefined}\n * @example\n * createTemplate('css', /\\bcss/.source);\n */\nvar createTemplate = (language, tag) => ({\n\tpattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern, 'g'),\n\tlookbehind: true,\n\tgreedy: true,\n\tinside: {\n\t\t'template-punctuation': {\n\t\t\tpattern: /^`|`$/,\n\t\t\talias: 'string'\n\t\t},\n\t\t['language-' + language]: {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: {\n\t\t\t\t'interpolation': {\n\t\t\t\t\tpattern: interpolationPattern,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-javascript',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[rest]: 'js'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t[tokenize]: embeddedIn(language)\n\t\t\t}\n\t\t}\n\t}\n});\n\njs['template-string'] = [\n\t// styled-jsx:\n\t//   css`a { color: #25F; }`\n\t// styled-components:\n\t//   styled.h1`color: red;`\n\tcreateTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),\n\n\t// html`<p></p>`\n\t// div.innerHTML = `<p></p>`\n\tcreateTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source),\n\n\t// svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n\tcreateTemplate('svg', /\\bsvg/.source),\n\n\t// md`# h1`, markdown`## h2`\n\tcreateTemplate('markdown', /\\b(?:markdown|md)/.source),\n\n\t// gql`...`, graphql`...`, graphql.experimental`...`\n\tcreateTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source),\n\n\t// sql`...`\n\tcreateTemplate('sql', /\\bsql/.source),\n\n\t// vanilla template string\n\ttemplateString\n];\n"],"names":[],"mappings":";;;AAIA,IAAI,KAAK,UAAU;AACnB,IAAI,iBAAiB,GAAG,iBAAiB;AAGzC,IAAI,yBAAyB,eAAe,QAAQ;AACpD,IAAI,uBAAuB,eAAe,OAAO,cAAc;AAa/D,IAAI,iBAAiB,CAAC,UAAU,SAAS;AAAA,EACxC,SAAS,OAAO,SAAS,MAAM,WAAW,wBAAwB,GAAG;AAAA,EACrE,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,QAAQ;AAAA,IACP,wBAAwB;AAAA,MACvB,SAAS;AAAA,MACT,OAAO;AAAA,IACP;AAAA,IACD,CAAC,cAAc,QAAQ,GAAG;AAAA,MACzB,SAAS;AAAA,MACT,QAAQ;AAAA,QACP,iBAAiB;AAAA,UAChB,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,UACP,QAAQ;AAAA,YACP,6BAA6B;AAAA,cAC5B,SAAS;AAAA,cACT,OAAO;AAAA,YACP;AAAA,YACD,CAAC,IAAI,GAAG;AAAA,UACd;AAAA,QACK;AAAA,QACD,CAAC,QAAQ,GAAG,WAAW,QAAQ;AAAA,MACnC;AAAA,IACA;AAAA,EACA;AACA;AAEA,GAAG,iBAAiB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvB,eAAe,OAAO,qIAAgI;AAAA;AAAA;AAAA,EAItJ,eAAe,QAAQ,6CAA+C;AAAA;AAAA,EAGtE,eAAe,OAAO,QAAc;AAAA;AAAA,EAGpC,eAAe,YAAY,oBAA0B;AAAA;AAAA,EAGrD,eAAe,WAAW,gDAAmD;AAAA;AAAA,EAG7E,eAAe,OAAO,QAAc;AAAA;AAAA,EAGpC;AACD;"}