{"version":3,"file":"pascal.js","sources":["../../../src/prism/languages/pascal.js"],"sourcesContent":["import { languages } from '../core.js';\nimport { extend } from '../utils/language.js';\n\n// Based on Free Pascal\n\n/* TODO\n\tSupport inline asm ?\n*/\n\nvar asm = {\n\tpattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/gi,\n\tlookbehind: true,\n\tgreedy: true\n}\n\nlanguages.objectpascal = asm.inside = languages.pascal = {\n\t'directive': {\n\t\tpattern: /\\{\\$[\\s\\S]*?\\}/g,\n\t\tgreedy: true,\n\t\talias: 'marco property'\n\t},\n\t'comment': {\n\t\tpattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/g,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /(?:'(?:''|[^\\n'])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/gi,\n\t\tgreedy: true\n\t},\n\t'asm': asm,\n\t'keyword': [\n\t\t{\n\t\t\t// Turbo Pascal\n\t\t\tpattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\t// Free Pascal\n\t\t\tpattern: /(^|[^&])\\b(?:dispose|exit|false|true|new)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\t// Object Pascal\n\t\t\tpattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\t// Modifiers\n\t\t\tpattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t// Hexadecimal, octal and binary, Decimal\n\t'number': /[&%]\\d+|\\$[a-f\\d]+|\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i,\n\t'operator': {\n\t\tpattern: /\\.\\.|\\*\\*|:=|<>|>>|<<|[<>/*+-]=?|[@^=]|(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|x?or|sh[lr])\\b/,\n\t\tlookbehind: true\n\t},\n\t'punctuation': /\\(\\.|\\.\\)|[()[\\].,:;]/\n};\n\nasm.inside = extend('pascal', {\n\t'asm': undefined,\n\t'keyword': undefined,\n\t'operator': undefined\n});\n"],"names":[],"mappings":";;AASA,IAAI,MAAM;AAAA,EACT,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,QAAQ;AACT;AAEA,UAAU,eAAe,IAAI,SAAS,UAAU,SAAS;AAAA,EACxD,aAAa;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA,EACP;AAAA,EACD,WAAW;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,EACR;AAAA,EACD,UAAU;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,EACR;AAAA,EACD,OAAO;AAAA,EACP,WAAW;AAAA,IACV;AAAA;AAAA,MAEC,SAAS;AAAA,MACT,YAAY;AAAA,IACZ;AAAA,IACD;AAAA;AAAA,MAEC,SAAS;AAAA,MACT,YAAY;AAAA,IACZ;AAAA,IACD;AAAA;AAAA,MAEC,SAAS;AAAA,MACT,YAAY;AAAA,IACZ;AAAA,IACD;AAAA;AAAA,MAEC,SAAS;AAAA,MACT,YAAY;AAAA,IACf;AAAA,EACE;AAAA;AAAA,EAED,UAAU;AAAA,EACV,YAAY;AAAA,IACX,SAAS;AAAA,IACT,YAAY;AAAA,EACZ;AAAA,EACD,eAAe;AAChB;AAEA,IAAI,SAAS,OAAO,UAAU;AAAA,EAC7B,OAAO;AAAA,EACP,WAAW;AAAA,EACX,YAAY;AACb,CAAC;"}