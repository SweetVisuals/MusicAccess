{"version":3,"file":"prolog.js","sources":["../../../src/prism/languages/prolog.js"],"sourcesContent":["import { languages } from '../core.js';\n\nlanguages.prolog = {\n\t// Syntax depends on the implementation\n\t'comment': {\n\t\tpattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/g,\n\t\tgreedy: true\n\t},\n\t// Depending on the implementation, strings may allow escaped newlines and quote-escape\n\t'string': {\n\t\tpattern: /([\"'])(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\\\n])*\\1(?!\\1)/g,\n\t\tgreedy: true\n\t},\n\t'builtin': /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n\t// FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n\t'function': /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n\t'number': /\\b\\d+(?:\\.\\d*)?/,\n\t// Custom operators are allowed\n\t'operator': /[\\\\$?@.:;|^!=<>/*+-]+|\\b(?:is|mod|not|xor)\\b/,\n\t'punctuation': /[()[\\]{},]/\n};\n"],"names":[],"mappings":";AAEA,UAAU,SAAS;AAAA;AAAA,EAElB,WAAW;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,EACR;AAAA;AAAA,EAED,UAAU;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,EACR;AAAA,EACD,WAAW;AAAA;AAAA,EAEX,YAAY;AAAA,EACZ,UAAU;AAAA;AAAA,EAEV,YAAY;AAAA,EACZ,eAAe;AAChB;"}