{"version":3,"file":"pug.js","sources":["../../../src/prism/languages/pug.js"],"sourcesContent":["import { languages, rest } from '../core.js';\nimport { re } from '../utils/shared.js';\nimport './markup.js';\nimport './javascript.js';\n\n// TODO:\n// - Add CSS highlighting inside <style> tags\n// - Add support for multi-line code blocks\n// - Add support for interpolation #{} and !{}\n// - Add support for tag interpolation #[]\n// - Add explicit support for plain text using |\n// - Add support for markup embedded in plain text\n\nvar js = languages.js;\nvar filter_pattern = /(^[ \\t]*):<0>(?:$\\s*?\\n\\1[ \\t]+\\S.*)+/.source;\n\nvar langMap = {\n\tatpl: 'twig',\n\tcoffee: 'coffeescript',\n\tsass: 'scss'\n};\n\nvar pug = languages.pug = {\n\n\t// Multiline stuff should appear before the rest\n\n\t// This handles both single-line and multi-line comments\n\t'comment': {\n\t\tpattern: /(^[ \\t]*)\\/\\/.*(?:$\\s*?\\n\\1[ \\t]+\\S.*)*/m,\n\t\tlookbehind: true\n\t},\n\n\t// All the tag-related part is in lookbehind\n\t// so that it can be highlighted by the \"tag\" pattern\n\t'multiline-script': {\n\t\tpattern: /(^([ \\t]*)script\\b.*\\.[ \\t]*)(?:$\\s*?\\n\\2[ \\t]+\\S.*)+/m,\n\t\tlookbehind: true,\n\t\tinside: js\n\t}\n};\n\n// Non exhaustive list of available filters\n[\n\t'atpl',\n\t'coffee',\n\t'ejs',\n\t'handlebars',\n\t'less',\n\t'livescript',\n\t'markdown',\n\t'sass',\n\t'stylus'\n].forEach(filter => {\n\tvar language = langMap[filter] || filter;\n\tpug['filter-' + filter] = {\n\t\tpattern: re(filter_pattern, [filter], 'm'),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'filter-name': {\n\t\t\t\tpattern: /^:.+/,\n\t\t\t\talias: 'variable'\n\t\t\t},\n\t\t\t'text': {\n\t\t\t\tpattern: /\\S[\\s\\S]*/,\n\t\t\t\talias: 'language-' + language,\n\t\t\t\tinside: language\n\t\t\t}\n\t\t}\n\t};\n});\n\nObject.assign(pug, {\n\t'filter': {\n\t\tpattern: re(filter_pattern, ['.+'], 'm'),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'filter-name': {\n\t\t\t\tpattern: /^:.+/,\n\t\t\t\talias: 'variable'\n\t\t\t},\n\t\t\t'text': /\\S[\\s\\S]*/,\n\t\t}\n\t},\n\n\t'multiline-plain-text': {\n\t\tpattern: /(^([ \\t]*)[\\w#.-]+\\.[ \\t]*)(?:$\\s*?\\n\\2[ \\t]+\\S.*)+/m,\n\t\tlookbehind: true\n\t},\n\t'markup': {\n\t\tpattern: /(^[ \\t]*)<.+/m,\n\t\tlookbehind: true,\n\t\tinside: languages.html\n\t},\n\t'doctype': {\n\t\tpattern: /((?:^|\\n)[ \\t]*)doctype(?: .+)?/,\n\t\tlookbehind: true\n\t},\n\n\t// This handle all conditional and loop keywords\n\t'flow-control': {\n\t\tpattern: /(^[ \\t]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'each': {\n\t\t\t\tpattern: /^each .+? in\\b/,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^\\w+|in$/,\n\t\t\t\t\t'punctuation': /,/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'branch': {\n\t\t\t\tpattern: /^\\w+/,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t[rest]: js\n\t\t}\n\t},\n\t'keyword': {\n\t\tpattern: /(^[ \\t]*)(?:append|block|extends|include|prepend)\\b.+/m,\n\t\tlookbehind: true\n\t},\n\t'mixin': [\n\t\t// Declaration\n\t\t{\n\t\t\tpattern: /(^[ \\t]*)mixin .+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'keyword': /^mixin/,\n\t\t\t\t'function': /\\b\\w+(?!\\s*[^\\s(])/,\n\t\t\t\t'punctuation': /[().,]/\n\t\t\t}\n\t\t},\n\t\t// Usage\n\t\t{\n\t\t\tpattern: /(^[ \\t]*)\\+.+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'name': {\n\t\t\t\t\tpattern: /^\\+\\w+/,\n\t\t\t\t\talias: 'function'\n\t\t\t\t},\n\t\t\t\t[rest]: js\n\t\t\t}\n\t\t}\n\t],\n\t'script': {\n\t\tpattern: /(^[ \\t]*script(?:(?:&[^(]+)?\\([^)]+\\))*[ \\t]).+/m,\n\t\tlookbehind: true,\n\t\tinside: js\n\t},\n\n\t'plain-text': {\n\t\tpattern: /(^[ \\t]*(?!-)[\\w#.-]*[\\w-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[ \\t]).+/m,\n\t\tlookbehind: true\n\t},\n\t'tag': {\n\t\tpattern: /(^[ \\t]*)(?!-)[\\w#.-]*[\\w-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'attributes': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /&[^(]+\\([^)]+\\)/,\n\t\t\t\t\tinside: js\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\([^)]+\\)/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\tpattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^\\n,)]+)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: js\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n\t\t\t\t\t\t'punctuation': /[!=(),]+/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'punctuation': /:/,\n\t\t\t'attr-id': /#[\\w-]+/,\n\t\t\t'attr-class': /\\.[\\w-]+/\n\t\t}\n\t},\n\t'code': {\n\t\tpattern: /(^[ \\t]*(?:-|!?=)).+/m,\n\t\tlookbehind: true,\n\t\tinside: js\n\t},\n\t'punctuation': /[.!=|-]+/\n});\n"],"names":[],"mappings":"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"}