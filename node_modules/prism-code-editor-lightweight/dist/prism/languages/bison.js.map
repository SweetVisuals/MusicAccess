{"version":3,"file":"bison.js","sources":["../../../src/prism/languages/bison.js"],"sourcesContent":["import { languages, rest } from '../core.js';\nimport { clone } from '../utils/language.js';\nimport './c.js';\n\nlanguages.bison = Object.assign({\n\t'bison': {\n\t\t// This should match all the beginning of the file\n\t\t// including the prologue(s), the bison declarations and\n\t\t// the grammar rules.\n\t\tpattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n\t\tinside: {\n\t\t\t'c': {\n\t\t\t\t// Allow for one level of nested braces\n\t\t\t\tpattern: /%\\{[\\s\\S]*?%\\}|\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'delimiter': {\n\t\t\t\t\t\tpattern: /^%?\\{|%?\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\t'bison-variable': {\n\t\t\t\t\t\tpattern: /[$@](?:<[^\\s>]+>)?[$\\w]+/,\n\t\t\t\t\t\talias: 'variable',\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /<|>/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t[rest]: languages.c\n\t\t\t\t}\n\t\t\t},\n\t\t\t'comment': languages.c.comment,\n\t\t\t'string': languages.c.string,\n\t\t\t'property': /\\S+(?=:)/,\n\t\t\t'keyword': /%\\w+/,\n\t\t\t'number': {\n\t\t\t\tpattern: /(^|[^@])\\b(?:0x[a-f\\d]+|\\d+)/i,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'punctuation': /%[%?]|[|:;[\\]<>]/\n\t\t}\n\t}\n}, clone(languages.c));\n"],"names":[],"mappings":";;;AAIA,UAAU,QAAQ,OAAO,OAAO;AAAA,EAC/B,SAAS;AAAA;AAAA;AAAA;AAAA,IAIR,SAAS;AAAA,IACT,QAAQ;AAAA,MACP,KAAK;AAAA;AAAA,QAEJ,SAAS;AAAA,QACT,QAAQ;AAAA,UACP,aAAa;AAAA,YACZ,SAAS;AAAA,YACT,OAAO;AAAA,UACP;AAAA,UACD,kBAAkB;AAAA,YACjB,SAAS;AAAA,YACT,OAAO;AAAA,YACP,QAAQ;AAAA,cACP,eAAe;AAAA,YACtB;AAAA,UACM;AAAA,UACD,CAAC,IAAI,GAAG,UAAU;AAAA,QACvB;AAAA,MACI;AAAA,MACD,WAAW,UAAU,EAAE;AAAA,MACvB,UAAU,UAAU,EAAE;AAAA,MACtB,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,UAAU;AAAA,QACT,SAAS;AAAA,QACT,YAAY;AAAA,MACZ;AAAA,MACD,eAAe;AAAA,IAClB;AAAA,EACA;AACA,GAAG,MAAM,UAAU,CAAC,CAAC;"}