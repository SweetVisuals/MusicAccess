{"version":3,"file":"racket.js","sources":["../../../src/prism/languages/racket.js"],"sourcesContent":["import { languages } from '../core.js';\nimport { extend, insertBefore } from '../utils/language.js';\nimport './scheme.js';\n\ninsertBefore(\n\tlanguages.rkt = languages.racket = extend('scheme', {\n\t\t'lambda-parameter': {\n\t\t\t// the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n\t\t\t// this will just prevent false positives of the `function` pattern\n\t\t\tpattern: /([(\\[]lambda\\s+[(\\[])[^()[\\]'\\s]+/,\n\t\t\tlookbehind: true\n\t\t}\n\t}),\n\t'string', {\n\t\t'lang': {\n\t\t\tpattern: /^#lang.+/mg,\n\t\t\tgreedy: true,\n\t\t\talias: 'keyword'\n\t\t}\n\t}\n);\n"],"names":[],"mappings":";;;AAIA;AAAA,EACC,UAAU,MAAM,UAAU,SAAS,OAAO,UAAU;AAAA,IACnD,oBAAoB;AAAA;AAAA;AAAA,MAGnB,SAAS;AAAA,MACT,YAAY;AAAA,IACf;AAAA,EACA,CAAE;AAAA,EACD;AAAA,EAAU;AAAA,IACT,QAAQ;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,OAAO;AAAA,IACV;AAAA,EACA;AACA;"}