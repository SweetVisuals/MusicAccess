{"version":3,"file":"actionscript.js","sources":["../../../src/prism/languages/actionscript.js"],"sourcesContent":["import { languages, tokenize, withoutTokenizer } from '../core.js';\nimport { extend, insertBefore } from '../utils/language.js';\nimport { tag } from '../utils/xml-shared.js';\nimport './javascript.js';\n\nvar actionscript = languages.actionscript = extend('javascript', {\n\t'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|[gs]et|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n\t'operator': /--|\\+\\+|[!=]==|(?:&&|\\|\\||<<|>>>?|[%&|^!=<>/*+-])=?|[~?@]/\n});\nactionscript['class-name'].alias = 'function';\n\n// doesn't work with AS because AS is too complex\ndelete actionscript['parameter'];\ndelete actionscript['literal-property'];\n\ninsertBefore(actionscript, 'regex', {\n\t'tag': tag\n});\n"],"names":[],"mappings":";;;;AAKA,IAAI,eAAe,UAAU,eAAe,OAAO,cAAc;AAAA,EAChE,WAAW;AAAA,EACX,YAAY;AACb,CAAC;AACD,aAAa,YAAY,EAAE,QAAQ;AAGnC,OAAO,aAAa,WAAW;AAC/B,OAAO,aAAa,kBAAkB;AAEtC,aAAa,cAAc,SAAS;AAAA,EACnC,OAAO;AACR,CAAC;"}