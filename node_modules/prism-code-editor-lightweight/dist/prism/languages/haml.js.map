{"version":3,"file":"haml.js","sources":["../../../src/prism/languages/haml.js"],"sourcesContent":["import { languages } from '../core.js';\nimport { re } from '../utils/shared.js';\nimport './ruby.js';\n\nvar haml = languages.haml = {\n\t// Multiline stuff should appear before the rest\n\n\t'multiline-comment': {\n\t\tpattern: /(^[ \\t]*)(?:\\/|-#).*(?:$\\s*?\\n\\1[ \\t]+\\S.*)*/m,\n\t\tlookbehind: true,\n\t\talias: 'comment'\n\t},\n\n\t'multiline-code': {\n\t\tpattern: /(^([ \\t]*)(?:[~-]|[&!]?=)).*(?:,[ \\t]*(?:\\n\\2[ \\t].*,[ \\t]*)*(?:\\n\\2[ \\t].+)|\\|[ \\t]*(?:\\n\\2[ \\t].*\\|[ \\t]*)*)/m,\n\t\tlookbehind: true,\n\t\tinside: 'ruby'\n\t}\n};\n\nvar filter_pattern = /(^[ \\t]*):<0>(?:$\\s*?\\n\\1[ \\t]+\\S.*)+/.source;\n\n// Non exhaustive list of available filters and associated languages\n[\n\t'css',\n\t'coffee',\n\t'erb',\n\t'javascript',\n\t'less',\n\t'markdown',\n\t'ruby',\n\t'scss',\n\t'textile'\n].forEach(filter => {\n\tvar language = filter == 'coffee' ? 'coffeescript' : filter;\n\thaml['filter-' + filter] = {\n\t\tpattern: re(filter_pattern, [filter], 'm'),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'filter-name': {\n\t\t\t\tpattern: /^:.+/,\n\t\t\t\talias: 'symbol'\n\t\t\t},\n\t\t\t'text': {\n\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\talias: 'language-' + language,\n\t\t\t\tinside: language\n\t\t\t}\n\t\t}\n\t};\n})\n\nObject.assign(haml, {\n\t'filter': {\n\t\tpattern: re(filter_pattern, ['[\\\\w-]+'], 'm'),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'filter-name': {\n\t\t\t\tpattern: /^:.+/,\n\t\t\t\talias: 'symbol'\n\t\t\t}\n\t\t}\n\t},\n\n\t'markup': {\n\t\tpattern: /(^[ \\t]*)<.+/m,\n\t\tlookbehind: true,\n\t\tinside: 'markup'\n\t},\n\t'doctype': {\n\t\tpattern: /(^[ \\t]*)!!!(?: .+)?/m,\n\t\tlookbehind: true\n\t},\n\t'tag': {\n\t\t// Allows for one nested group of braces\n\t\tpattern: /(^[ \\t]*)[%.#][\\w#.-]*[\\w-](?:\\([^)]*\\)|\\{(?:[^{}]|\\{[^}]*\\})*\\}|\\[[^\\]]*\\])*[<>/]*/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'attributes': [\n\t\t\t\t{\n\t\t\t\t\t// Lookbehind tries to prevent interpolations from breaking it all\n\t\t\t\t\t// Allows for one nested group of braces\n\t\t\t\t\tpattern: /(^|[^#])\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: 'ruby'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\([^)]+\\)/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\\n\"])*\"|[^)\\s]+)/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n\t\t\t\t\t\t'punctuation': /[=(),]/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\[[^\\]]+\\]/,\n\t\t\t\t\tinside: 'ruby'\n\t\t\t\t}\n\t\t\t],\n\t\t\t'punctuation': /<|>/\n\t\t}\n\t},\n\t'code': {\n\t\tpattern: /(^[ \\t]*(?:[~-]|[&!]?=)).+/m,\n\t\tlookbehind: true,\n\t\tinside: 'ruby'\n\t},\n\t// Interpolations in plain text\n\t'interpolation': {\n\t\tpattern: /#\\{[^}]+\\}/,\n\t\tinside: {\n\t\t\t'delimiter': {\n\t\t\t\tpattern: /^#\\{|\\}$/,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\t'ruby': {\n\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\tinside: 'ruby'\n\t\t\t}\n\t\t}\n\t},\n\t'punctuation': {\n\t\tpattern: /(^[ \\t]*)[~=&!-]+/m,\n\t\tlookbehind: true\n\t}\n});\n"],"names":[],"mappings":";;;AAIA,IAAI,OAAO,UAAU,OAAO;AAAA;AAAA,EAG3B,qBAAqB;AAAA,IACpB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,OAAO;AAAA,EACP;AAAA,EAED,kBAAkB;AAAA,IACjB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,EACV;AACA;AAEA,IAAI,iBAAiB;AAGrB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,EAAE,QAAQ,YAAU;AACnB,MAAI,WAAW,UAAU,WAAW,iBAAiB;AACrD,OAAK,YAAY,MAAM,IAAI;AAAA,IAC1B,SAAS,GAAG,gBAAgB,CAAC,MAAM,GAAG,GAAG;AAAA,IACzC,YAAY;AAAA,IACZ,QAAQ;AAAA,MACP,eAAe;AAAA,QACd,SAAS;AAAA,QACT,OAAO;AAAA,MACP;AAAA,MACD,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,OAAO,cAAc;AAAA,QACrB,QAAQ;AAAA,MACZ;AAAA,IACA;AAAA,EACE;AACF,CAAC;AAED,OAAO,OAAO,MAAM;AAAA,EACnB,UAAU;AAAA,IACT,SAAS,GAAG,gBAAgB,CAAC,SAAS,GAAG,GAAG;AAAA,IAC5C,YAAY;AAAA,IACZ,QAAQ;AAAA,MACP,eAAe;AAAA,QACd,SAAS;AAAA,QACT,OAAO;AAAA,MACX;AAAA,IACA;AAAA,EACE;AAAA,EAED,UAAU;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,EACR;AAAA,EACD,WAAW;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA,EACZ;AAAA,EACD,OAAO;AAAA;AAAA,IAEN,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,MACP,cAAc;AAAA,QACb;AAAA;AAAA;AAAA,UAGC,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA,QACR;AAAA,QACD;AAAA,UACC,SAAS;AAAA,UACT,QAAQ;AAAA,YACP,cAAc;AAAA,cACb,SAAS;AAAA,cACT,YAAY;AAAA,YACZ;AAAA,YACD,aAAa;AAAA,YACb,eAAe;AAAA,UACrB;AAAA,QACK;AAAA,QACD;AAAA,UACC,SAAS;AAAA,UACT,QAAQ;AAAA,QACb;AAAA,MACI;AAAA,MACD,eAAe;AAAA,IAClB;AAAA,EACE;AAAA,EACD,QAAQ;AAAA,IACP,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,EACR;AAAA;AAAA,EAED,iBAAiB;AAAA,IAChB,SAAS;AAAA,IACT,QAAQ;AAAA,MACP,aAAa;AAAA,QACZ,SAAS;AAAA,QACT,OAAO;AAAA,MACP;AAAA,MACD,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,QAAQ;AAAA,MACZ;AAAA,IACA;AAAA,EACE;AAAA,EACD,eAAe;AAAA,IACd,SAAS;AAAA,IACT,YAAY;AAAA,EACd;AACA,CAAC;"}