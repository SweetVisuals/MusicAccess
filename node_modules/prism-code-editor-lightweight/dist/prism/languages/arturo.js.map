{"version":3,"file":"arturo.js","sources":["../../../src/prism/languages/arturo.js"],"sourcesContent":["import { languages } from '../core.js';\n\n/**\n * @param {string} lang\n * @param {string} pattern\n */\nvar createLanguageString = (lang, pattern = lang) => ({\n\tpattern: RegExp(`\\\\{!(?:${pattern})$[\\\\s\\\\S]*\\\\}`, 'mg'),\n\tgreedy: true,\n\tinside: {\n\t\t'string': /^.+|.$/,\n\t\t'embedded': {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\talias: 'language-' + lang,\n\t\t\tinside: lang\n\t\t},\n\t}\n});\n\nlanguages.art = languages.arturo = {\n\t'comment': {\n\t\tpattern: /;.*/g,\n\t\tgreedy: true\n\t},\n\n\t'character': {\n\t\tpattern: /`.`/g,\n\t\tgreedy: true,\n\t\talias: 'char'\n\t},\n\n\t'number': /\\b\\d+(?:\\.\\d+(?:\\.\\d+(?:-[\\w+-]+)?)?)?\\b/,\n\n\t'string': {\n\t\tpattern: /\"(?:\\\\.|[^\\\\\\n\"])*\"/g,\n\t\tgreedy: true\n\t},\n\n\t'regex': {\n\t\tpattern: /\\{\\/.*?\\/\\}/g,\n\t\tgreedy: true\n\t},\n\n\t'html-string': createLanguageString('html'),\n\t'css-string': createLanguageString('css'),\n\t'js-string': createLanguageString('js'),\n\t'md-string': createLanguageString('md'),\n\t'sql-string': createLanguageString('sql'),\n\t'sh-string': createLanguageString('shell', 'sh'),\n\n\t'multistring': {\n\t\tpattern: /».*|\\{:[\\s\\S]*?:\\}|\\{[^}]*\\}|^-{6}$[\\s\\S]*/mg,\n\t\talias: 'string',\n\t\tgreedy: true\n\t},\n\n\t'label': {\n\t\tpattern: /\\w+\\??:/,\n\t\talias: 'property'\n\t},\n\n\t'literal': {\n\t\tpattern: /'\\w+\\??:?/,\n\t\talias: 'constant'\n\t},\n\n\t'type': {\n\t\tpattern: /:\\w+\\??:?/,\n\t\talias: 'class-name'\n\t},\n\n\t'color': /#\\w+/,\n\n\t'predicate': {\n\t\tpattern: /\\b(?:all|an[dy]|ascii|attr|attribute|attributeLabel|binary|block|char|contains|database|date|dictionary|empty|equal|even|every|exists|false|true|floating|function|greater|greaterOrEqual|i[fns]|inline|integer|key|label|leap|less|lessOrEqual|literal|logical|lower|n?and|negative|not|notEqual|null|numeric|odd|path|pathLabel|positive|prefix|prime|regex|same|set|some|sorted|standalone|string|subset|suffix|superset|symbol|symbolLiteral|try|type|unless|upper|when|whitespace|word|x?n?or|zero)\\?/,\n\t\talias: 'keyword'\n\t},\n\n\t'builtin-function': {\n\t\tpattern: /\\b(?:ab?s|a?cosh?|a?csech?|a?ctanh?|add|after|alert|alias|angle|append|args?|arity|array|a?sech?|a?sinh?|a?tanh?|atan2|attrs?|average|before|benchmark|blend|break|call|capitalize|case|ceil|chop|clear|clip|close|color|combine|conj|continue|copy|crc|cursor|darken|dec|decode|define|delete|desaturate|deviation|dialog|dictionary|difference|digest|digits|do|download|drop|dup|e|else|empty|encode|ensure|env|escape|execute|exit|exp|extend|extract|factors|f?div|filter|first|flatten|floor|fold|from|function|gamma|gcd|get|goto|hash|hypot|if|inc|indent|index|infinity|info|input|insert|inspect|intersection|invert|jaro|join|keys|kurtosis|last|let|levenshtein|lighten|list|ln|log|loop|lower|mail|map|match|max|median|min|mod|module|mul|n?and|neg|new|normalize|no[tw]|null|open|outdent|pad|palette|panic|path|pause|permissions|permutate|pi|po[pw]|popup|powerset|powmod|prefix|prints?|process|product|query|random|range|read|relative|remove|rename|render|repeat|replace|request|return|reverse|round|sample|saturate|script|select|serve|set|sh[lr]|shuffle|size|skewness|slice|sort|spin|split|sqrt|squeeze|stack|strip|su[bm]|suffix|switch|symbols|symlink|sys|take|terminal|terminate|to|truncate|try|type|unclip|union|unique|unless|until|unzip|upper|values|var|variance|volume|webview|while|with|wordwrap|write|x?n?or|zip)\\b/,\n\t\talias: 'keyword'\n\t},\n\n\t'sugar': {\n\t\tpattern: /->|=>|\\||::/,\n\t\talias: 'operator'\n\t},\n\n\t'punctuation': /[()[\\],]/,\n\n\t'symbol': /<:|-:|ø|@|#|\\+|\\||\\*|\\$|---|-|%|\\/|\\.\\.|\\^|~|=|<|>|\\\\/,\n\n\t'boolean': /\\b(?:false|true|maybe)\\b/\n};\n"],"names":[],"mappings":";AAMA,IAAI,uBAAuB,CAAC,MAAM,UAAU,UAAU;AAAA,EACrD,SAAS,OAAO,UAAU,OAAO,aAAkB,IAAI;AAAA,EACvD,QAAQ;AAAA,EACR,QAAQ;AAAA,IACP,UAAU;AAAA,IACV,YAAY;AAAA,MACX,SAAS;AAAA,MACT,OAAO,cAAc;AAAA,MACrB,QAAQ;AAAA,IACR;AAAA,EACH;AACA;AAEA,UAAU,MAAM,UAAU,SAAS;AAAA,EAClC,WAAW;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,EACR;AAAA,EAED,aAAa;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA,EACP;AAAA,EAED,UAAU;AAAA,EAEV,UAAU;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,EACR;AAAA,EAED,SAAS;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,EACR;AAAA,EAED,eAAe,qBAAqB,MAAM;AAAA,EAC1C,cAAc,qBAAqB,KAAK;AAAA,EACxC,aAAa,qBAAqB,IAAI;AAAA,EACtC,aAAa,qBAAqB,IAAI;AAAA,EACtC,cAAc,qBAAqB,KAAK;AAAA,EACxC,aAAa,qBAAqB,SAAS,IAAI;AAAA,EAE/C,eAAe;AAAA,IACd,SAAS;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,EACR;AAAA,EAED,SAAS;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EAED,WAAW;AAAA,IACV,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EAED,QAAQ;AAAA,IACP,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EAED,SAAS;AAAA,EAET,aAAa;AAAA,IACZ,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EAED,oBAAoB;AAAA,IACnB,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EAED,SAAS;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EAED,eAAe;AAAA,EAEf,UAAU;AAAA,EAEV,WAAW;AACZ;"}