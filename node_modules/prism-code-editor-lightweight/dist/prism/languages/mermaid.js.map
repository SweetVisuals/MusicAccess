{"version":3,"file":"mermaid.js","sources":["../../../src/prism/languages/mermaid.js"],"sourcesContent":["import { languages } from '../core.js';\n\nlanguages.mermaid = {\n\t'comment': {\n\t\tpattern: /%%.*/g,\n\t\tgreedy: true\n\t},\n\n\t'style': {\n\t\tpattern: /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[$\\w-]+[ \\t]+)\\w.*[^\\s;]/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'property': /\\b\\w[\\w-]*(?=[ \\t]*:)/,\n\t\t\t'operator': /:/,\n\t\t\t'punctuation': /,/\n\t\t}\n\t},\n\n\t'inter-arrow-label': {\n\t\tpattern: /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\\n\"]*\"|[^\\s\".=-](?:[^\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/g,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'arrow': {\n\t\t\t\tpattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\n\t\t\t\talias: 'operator'\n\t\t\t},\n\t\t\t'label': {\n\t\t\t\tpattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'property'\n\t\t\t},\n\t\t\t'arrow-head': {\n\t\t\t\tpattern: /^\\S+/,\n\t\t\t\talias: 'arrow operator'\n\t\t\t}\n\t\t}\n\t},\n\n\t'arrow': [\n\t\t// This might look complex but it really isn't.\n\t\t// There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\n\t\t// problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\n\t\t// characters in the one lookbehind because that would create too many false negatives. So we have to split the\n\t\t// arrows into different patterns.\n\t\t{\n\t\t\t// ER diagram\n\t\t\tpattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'operator'\n\t\t},\n\t\t{\n\t\t\t// flow chart\n\t\t\t// (?:==+|--+|-\\.*-)\n\t\t\tpattern: /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'operator'\n\t\t},\n\t\t{\n\t\t\t// sequence diagram\n\t\t\tpattern: /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'operator'\n\t\t},\n\t\t{\n\t\t\t// class diagram\n\t\t\tpattern: /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'operator'\n\t\t},\n\t],\n\n\t'label': {\n\t\tpattern: /(^|[^|<])\\|(?:[^\\n\"|]|\"[^\\n\"]*\")+\\|/g,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t},\n\n\t'text': {\n\t\tpattern: /(?:[(\\[{]+|\\b>)(?:[^\\n\"()[\\]{}]|\"[^\\n\"]*\")+(?:[)\\]}]+|>)/,\n\t\talias: 'string'\n\t},\n\t'string': {\n\t\tpattern: /\"[^\\n\"]*\"/g,\n\t\tgreedy: true\n\t},\n\n\t'annotation': {\n\t\tpattern: /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\n\t\talias: 'important'\n\t},\n\n\t'keyword': [\n\t\t// This language has both case-sensitive and case-insensitive keywords\n\t\t{\n\t\t\tpattern: /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![$\\w-])/mg,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![$\\w-])/img,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\n\t'entity': /#[a-z\\d]+;/,\n\n\t'operator': {\n\t\tpattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\n\t\tlookbehind: true\n\t},\n\t'punctuation': /[(){};]/\n};\n"],"names":[],"mappings":";AAEA,UAAU,UAAU;AAAA,EACnB,WAAW;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,EACR;AAAA,EAED,SAAS;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,MACP,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,eAAe;AAAA,IAClB;AAAA,EACE;AAAA,EAED,qBAAqB;AAAA,IACpB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,QAAQ;AAAA,MACP,SAAS;AAAA,QACR,SAAS;AAAA,QACT,OAAO;AAAA,MACP;AAAA,MACD,SAAS;AAAA,QACR,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,OAAO;AAAA,MACP;AAAA,MACD,cAAc;AAAA,QACb,SAAS;AAAA,QACT,OAAO;AAAA,MACX;AAAA,IACA;AAAA,EACE;AAAA,EAED,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMR;AAAA;AAAA,MAEC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA,IACP;AAAA,IACD;AAAA;AAAA;AAAA,MAGC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA,IACP;AAAA,IACD;AAAA;AAAA,MAEC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA,IACP;AAAA,IACD;AAAA;AAAA,MAEC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA,IACP;AAAA,EACD;AAAA,EAED,SAAS;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,OAAO;AAAA,EACP;AAAA,EAED,QAAQ;AAAA,IACP,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EACD,UAAU;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,EACR;AAAA,EAED,cAAc;AAAA,IACb,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EAED,WAAW;AAAA;AAAA,IAEV;AAAA,MACC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,IACR;AAAA,IACD;AAAA,MACC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,IACX;AAAA,EACE;AAAA,EAED,UAAU;AAAA,EAEV,YAAY;AAAA,IACX,SAAS;AAAA,IACT,YAAY;AAAA,EACZ;AAAA,EACD,eAAe;AAChB;"}