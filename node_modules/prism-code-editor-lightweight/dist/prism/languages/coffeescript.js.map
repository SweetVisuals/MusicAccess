{"version":3,"file":"coffeescript.js","sources":["../../../src/prism/languages/coffeescript.js"],"sourcesContent":["import { languages } from '../core.js';\nimport { extend, insertBefore } from '../utils/language.js';\nimport './javascript.js';\n\n// Ignore comments starting with { to privilege string interpolation highlighting\nvar comment = /#(?!\\{).+/;\nvar interpolation = {\n\tpattern: /#\\{[^}]+\\}/,\n\talias: 'variable'\n};\n\nvar coffee = languages.coffee = languages.coffeescript = extend('js', {\n\t'comment': comment,\n\t'string': [\n\n\t\t// Strings are multiline\n\t\t{\n\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/g,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t{\n\t\t\t// Strings are multiline\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/g,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t}\n\t],\n\t'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extends?|false|true|finally|f?or|i[fns]|instanceof|isnt|let|loop|namespace|new|not?|null|off?|ow?n|return|super|switch|[tw]hen|this|throw|try|typeof|undefined|unless|until|while|window|with|yes|yield)\\b/,\n\t'class-member': {\n\t\tpattern: /@(?!\\d)\\w+/,\n\t\talias: 'variable'\n\t}\n});\n\ninsertBefore(coffee, 'comment', {\n\t'multiline-comment': {\n\t\tpattern: /###[\\s\\S]+?###/,\n\t\talias: 'comment'\n\t},\n\n\t// Block regexp can contain comments and interpolation\n\t'block-regex': {\n\t\tpattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n\t\talias: 'regex',\n\t\tinside: {\n\t\t\t'comment': comment,\n\t\t\t'interpolation': interpolation\n\t\t}\n\t}\n});\n\ninsertBefore(coffee, 'string', {\n\t'inline-javascript': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n\t\tinside: {\n\t\t\t'delimiter': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\t'script': {\n\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\talias: 'language-javascript',\n\t\t\t\tinside: 'js'\n\t\t\t}\n\t\t}\n\t},\n\n\t// Block strings\n\t'multiline-string': [\n\t\t{\n\t\t\tpattern: /'''[\\s\\S]*?'''/g,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t{\n\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/g,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t}\n\t]\n\n});\n\ninsertBefore(coffee, 'keyword', {\n\t// Object property\n\t'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n});\n\ndelete coffee['template-string'];\n"],"names":[],"mappings":";;;AAKA,IAAI,UAAU;AACd,IAAI,gBAAgB;AAAA,EACnB,SAAS;AAAA,EACT,OAAO;AACR;AAEA,IAAI,SAAS,UAAU,SAAS,UAAU,eAAe,OAAO,MAAM;AAAA,EACrE,WAAW;AAAA,EACX,UAAU;AAAA;AAAA,IAGT;AAAA,MACC,SAAS;AAAA,MACT,QAAQ;AAAA,IACR;AAAA,IAED;AAAA;AAAA,MAEC,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,QACP,iBAAiB;AAAA,MACrB;AAAA,IACA;AAAA,EACE;AAAA,EACD,WAAW;AAAA,EACX,gBAAgB;AAAA,IACf,SAAS;AAAA,IACT,OAAO;AAAA,EACT;AACA,CAAC;AAED,aAAa,QAAQ,WAAW;AAAA,EAC/B,qBAAqB;AAAA,IACpB,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA;AAAA,EAGD,eAAe;AAAA,IACd,SAAS;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,MACP,WAAW;AAAA,MACX,iBAAiB;AAAA,IACpB;AAAA,EACA;AACA,CAAC;AAED,aAAa,QAAQ,UAAU;AAAA,EAC9B,qBAAqB;AAAA,IACpB,SAAS;AAAA,IACT,QAAQ;AAAA,MACP,aAAa;AAAA,QACZ,SAAS;AAAA,QACT,OAAO;AAAA,MACP;AAAA,MACD,UAAU;AAAA,QACT,SAAS;AAAA,QACT,OAAO;AAAA,QACP,QAAQ;AAAA,MACZ;AAAA,IACA;AAAA,EACE;AAAA;AAAA,EAGD,oBAAoB;AAAA,IACnB;AAAA,MACC,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,OAAO;AAAA,IACP;AAAA,IACD;AAAA,MACC,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,QACP,iBAAiB;AAAA,MACrB;AAAA,IACA;AAAA,EACA;AAEA,CAAC;AAED,aAAa,QAAQ,WAAW;AAAA;AAAA,EAE/B,YAAY;AACb,CAAC;AAED,OAAO,OAAO,iBAAiB;"}