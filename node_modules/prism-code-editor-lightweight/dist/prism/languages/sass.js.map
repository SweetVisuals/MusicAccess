{"version":3,"file":"sass.js","sources":["../../../src/prism/languages/sass.js"],"sourcesContent":["import { languages } from '../core.js';\nimport { extend, insertBefore } from '../utils/language.js';\nimport './css.js';\n\nvar variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\nvar operator = {\n\tpattern: /[%/*+]|[!=]=|<=?|>=?|\\b(?:and|not|or)\\b|(\\s)-(?!\\S)/,\n\tlookbehind: true\n};\n\nvar sass = languages.sass = extend('css', {\n\t// Sass comments don't need to be closed, only indented\n\t'comment': {\n\t\tpattern: /^([ \\t]*)\\/[/*].*(?:$\\s*?\\n\\1[ \\t]+\\S.*)*/mg,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t}\n});\n\ninsertBefore(sass, 'atrule', {\n\t// We want to consume the whole line\n\t'atrule-line': {\n\t\t// Includes support for = and + shortcuts\n\t\tpattern: /^(?:[ \\t]*)[@+=].+/mg,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'atrule': /(?:@[\\w-]+|[+=])/\n\t\t}\n\t}\n});\ndelete sass.atrule;\n\ninsertBefore(sass, 'property', {\n\t// We want to consume the whole line\n\t'variable-line': {\n\t\tpattern: /^[ \\t]*\\$.+/mg,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'punctuation': /:/,\n\t\t\t'variable': variable,\n\t\t\t'operator': operator\n\t\t}\n\t},\n\t// We want to consume the whole line\n\t'property-line': {\n\t\tpattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/mg,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'property': [\n\t\t\t\t/[^:\\s]+(?=\\s*:)/,\n\t\t\t\t{\n\t\t\t\t\tpattern: /(:)[^:\\s]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'punctuation': /:/,\n\t\t\t'variable': variable,\n\t\t\t'operator': operator,\n\t\t\t'important': sass.important\n\t\t}\n\t}\n});\ndelete sass.property;\ndelete sass.important;\n\n// Now that whole lines for other patterns are consumed,\n// what's left should be selectors\ninsertBefore(sass, 'punctuation', {\n\t'selector': {\n\t\tpattern: /^([ \\t]*)\\S(?:,[^\\n,]+|[^\\n,]*)(?:,[^\\n,]+)*(?:,\\n\\1[ \\t]+\\S(?:,[^\\n,]+|[^\\n,]*)(?:,[^\\n,]+)*)*/mg,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t}\n});\n"],"names":[],"mappings":";;;AAIA,IAAI,WAAW;AACf,IAAI,WAAW;AAAA,EACd,SAAS;AAAA,EACT,YAAY;AACb;AAEA,IAAI,OAAO,UAAU,OAAO,OAAO,OAAO;AAAA;AAAA,EAEzC,WAAW;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,EACV;AACA,CAAC;AAED,aAAa,MAAM,UAAU;AAAA;AAAA,EAE5B,eAAe;AAAA;AAAA,IAEd,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACP,UAAU;AAAA,IACb;AAAA,EACA;AACA,CAAC;AACD,OAAO,KAAK;AAEZ,aAAa,MAAM,YAAY;AAAA;AAAA,EAE9B,iBAAiB;AAAA,IAChB,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACP,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,YAAY;AAAA,IACf;AAAA,EACE;AAAA;AAAA,EAED,iBAAiB;AAAA,IAChB,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACP,YAAY;AAAA,QACX;AAAA,QACA;AAAA,UACC,SAAS;AAAA,UACT,YAAY;AAAA,QACjB;AAAA,MACI;AAAA,MACD,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,aAAa,KAAK;AAAA,IACrB;AAAA,EACA;AACA,CAAC;AACD,OAAO,KAAK;AACZ,OAAO,KAAK;AAIZ,aAAa,MAAM,eAAe;AAAA,EACjC,YAAY;AAAA,IACX,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,EACV;AACA,CAAC;"}