{"version":3,"file":"index.js","sources":["../../../../src/extensions/autocomplete/css/data.ts","../../../../src/extensions/autocomplete/css/index.ts"],"sourcesContent":["// generated from @vscode/web-custom-data package\n\nimport { Completion } from \"../types.js\"\n\nconst toCompletions = (prefix: string, icon: string, values: string): Completion[] => {\n\treturn values.split(\",\").map(val => val.includes(\"(\") ?\n\t\t{ label: prefix + val.slice(0, -2), icon: \"function\", insert: prefix + val, tabStops: [val.length + prefix.length - 1] } :\n\t\t{ label: prefix + val, icon }\n\t)\n}\n\nconst cssValues = /* @__PURE__ */ toCompletions(\"\", \"enum\", \"aliceblue,antiquewhite,aqua,aquamarine,azure,beige,bisque,black,blanchedalmond,blue,blueviolet,brown,burlywood,cadetblue,chartreuse,chocolate,coral,cornflowerblue,cornsilk,crimson,cyan,darkblue,darkcyan,darkgoldenrod,darkgray,darkgreen,darkgrey,darkkhaki,darkmagenta,darkolivegreen,darkorange,darkorchid,darkred,darksalmon,darkseagreen,darkslateblue,darkslategray,darkslategrey,darkturquoise,darkviolet,deeppink,deepskyblue,dimgray,dimgrey,dodgerblue,firebrick,floralwhite,forestgreen,fuchsia,gainsboro,ghostwhite,gold,goldenrod,gray,green,greenyellow,grey,honeydew,hotpink,indianred,indigo,ivory,khaki,lavender,lavenderblush,lawngreen,lemonchiffon,lightblue,lightcoral,lightcyan,lightgoldenrodyellow,lightgray,lightgreen,lightgrey,lightpink,lightsalmon,lightseagreen,lightskyblue,lightslategray,lightslategrey,lightsteelblue,lightyellow,lime,limegreen,linen,magenta,maroon,mediumaquamarine,mediumblue,mediumorchid,mediumpurple,mediumseagreen,mediumslateblue,mediumspringgreen,mediumturquoise,mediumvioletred,midnightblue,mintcream,mistyrose,moccasin,navajowhite,navy,oldlace,olive,olivedrab,orange,orangered,orchid,palegoldenrod,palegreen,paleturquoise,palevioletred,papayawhip,peachpuff,peru,pink,plum,powderblue,purple,rebeccapurple,red,rosybrown,royalblue,saddlebrown,salmon,sandybrown,seagreen,seashell,sienna,silver,skyblue,slateblue,slategray,slategrey,snow,springgreen,steelblue,tan,teal,thistle,tomato,transparent,turquoise,violet,wheat,white,whitesmoke,yellow,yellowgreen,unset,initial,revert,revert-layer,pre,pre-wrap,white-space,linear,ease,ease-in,ease-in-out,ease-out,center,flex-end,flex-start,space-around,space-between,stretch,start,end,normal,baseline,first baseline,last baseline,space-evenly,safe,unsafe,self-start,self-end,auto,left,right,legacy,save,unsave,alternate,alternate-reverse,backwards,both,forwards,infinite,none,reverse,paused,running,hidden,visible,fixed,local,scroll,multiply,screen,overlay,darken,lighten,color-dodge,color-burn,hard-light,soft-light,difference,exclusion,hue,saturation,color,luminosity,bottom,top,contain,cover,collapse,separate,fill,repeat,round,space,url(),clone,slice,inset,border-box,content-box,always,avoid,avoid-column,avoid-page,column,page,rect(),evenodd,nonzero,linearRGB,sRGB,balance,all,strict,content,size,layout,style,paint,attr(),counter(),icon,alias,all-scroll,cell,col-resize,context-menu,copy,crosshair,default,e-resize,ew-resize,grab,grabbing,help,move,ne-resize,nesw-resize,no-drop,not-allowed,n-resize,ns-resize,nw-resize,nwse-resize,pointer,progress,row-resize,se-resize,s-resize,sw-resize,text,vertical-text,wait,w-resize,zoom-in,zoom-out,ltr,rtl,block,contents,flex,flexbox,flow-root,grid,inline,inline-block,inline-flex,inline-flexbox,inline-table,list-item,ruby,ruby-base,ruby-base-container,ruby-text,ruby-text-container,run-in,table,table-caption,table-cell,table-column,table-column-group,table-footer-group,table-header-group,table-row,table-row-group,hide,show,accumulate,new,blur(),brightness(),contrast(),drop-shadow(),grayscale(),hue-rotate(),invert,opacity(),saturate(),sepia(),column-reverse,row,row-reverse,nowrap,wrap,wrap-reverse,inline-end,inline-start,100,200,300,400,500,600,700,800,900,bold,bolder,caption,italic,large,larger,lighter,medium,menu,message-box,oblique,small,small-caps,small-caption,smaller,status-bar,x-large,x-small,xx-large,xx-small,condensed,expanded,extra-condensed,extra-expanded,narrower,semi-condensed,semi-expanded,ultra-condensed,ultra-expanded,wider,weight,annotation(),character-variant(),historical-forms,ornaments(),styleset(),stylistic(),swash(),all-petite-caps,all-small-caps,petite-caps,titling-caps,unicase,full-width,jis04,jis78,jis83,jis90,proportional-width,simplified,traditional,additional-ligatures,common-ligatures,contextual,discretionary-ligatures,historical-ligatures,no-additional-ligatures,no-common-ligatures,no-contextual,no-discretionary-ligatures,no-historical-ligatures,diagonal-fractions,lining-nums,oldstyle-nums,ordinal,proportional-nums,slashed-zero,stacked-fractions,tabular-nums,sub,super,span,min-content,max-content,minmax(),dense,subgrid,fit-content,manual,flip,from-image,crisp-edges,optimizeQuality,optimizeSpeed,pixelated,active,disabled,inactive,isolate,loose,anywhere,armenian,circle,decimal,decimal-leading-zero,disc,georgian,inside,lower-alpha,lower-greek,lower-latin,lower-roman,outside,square,symbols(),upper-alpha,upper-latin,upper-roman,alpha,luminance,path(),current,root,scale-down,break-word,markers,stroke,painted,visibleFill,visiblePainted,visibleStroke,absolute,relative,static,sticky,horizontal,vertical,distribute-letter,distribute-space,line-edge,after,before,smooth,mandatory,proximity,margin-box,crispEdges,geometricPrecision,format(),butt,bevel,miter,additive,alphabetic,cyclic,extends,numeric,symbolic,justify,middle,dashed,dotted,double,line-through,overline,solid,underline,wavy,distribute,distribute-all-lines,inter-cluster,inter-ideograph,inter-word,kashida,newspaper,sideways,sideways-right,upright,clip,ellipsis,optimizeLegibility,capitalize,lowercase,uppercase,above,below,cross-slide-x,cross-slide-y,double-tap-zoom,manipulation,pan-x,pan-y,pinch-zoom,matrix(),matrix3d(),perspective(),rotate(),rotate3d(),rotateX(),rotateY(),rotateZ(),scale(),scale3d(),scaleX(),scaleY(),scaleZ(),skew(),skewX(),skewY(),translate(),translate3d(),translateX(),translateY(),translateZ(),flat,preserve-3d,bidi-override,embed,isolate-override,plaintext,text-bottom,text-top,scroll-position,break-all,keep-all,horizontal-tb,sideways-lr,sideways-rl,vertical-lr,vertical-rl,inherit,single,multiple,inline-axis,block-axis,bar,underscore,inline-size,emoji,unicode,in-flow,compact,padding-box,economy,exact,thin,stable,pretty,fill-box,stroke-box,view-box,discard,preserve,preserve-breaks,preserve-spaces,break-spaces,true,false,calc(),min(),max(),clamp(),mod(),rem(),sin(),cos(),asin(),acos(),atan(),atan2(),pow(),sqrt(),hypot(),log(),exp(),abs(),sign(),rgb(),hsl(),hwb(),lch(),oklch(),lab(),oklab(),color-mix(),linear-gradient(),radial-gradient(),conic-gradient(),repeating-linear-gradient(),repeating-radial-gradient(),repeating-conic-gradient(),image-set(),cross-fade(),counters(),ellipse(),xywh(),polygon(),shape(),env(),var(),cubic-bezier(),steps(),view(),anchor(),anchor-size()\")\n\nconst atRules = /* @__PURE__ */ toCompletions(\"@\", \"keyword\", \"charset,counter-style,font-face,font-feature-values,import,keyframes,layer,media,namespace,page,property,supports,container,scope,position-try,starting-style,view-transition\")\n\nconst pseudoClasses = /* @__PURE__ */ toCompletions(\":\", \"function\", \"active,any-link,checked,corner-present,decrement,default,disabled,double-button,empty,enabled,end,first,first-child,first-of-type,focus,fullscreen,future,horizontal,host,host-context(),hover,increment,indeterminate,in-range,invalid,lang(),last-child,last-of-type,left,link,matches(),no-button,not(),nth-child(),nth-last-child(),nth-last-of-type(),nth-of-type(),only-child,only-of-type,optional,out-of-range,past,read-only,read-write,required,right,root,scope,single-button,start,target,valid,vertical,visited,window-inactive,current,blank,defined,dir(),focus-visible,focus-within,has(),is(),local-link,paused,placeholder-shown,playing,target-within,user-invalid,user-valid,where(),picture-in-picture\")\n\nconst pseudoElements = /* @__PURE__ */ toCompletions(\"::\", \"function\", \"after,backdrop,before,content,cue,cue-region,first-letter,first-line,selection,shadow,target-text,grammar-error,marker,part(),placeholder,slotted(),spelling-error,view-transition,view-transition-group,view-transition-image-pair,view-transition-new,view-transition-old\")\n\nexport { cssValues, atRules, pseudoClasses, pseudoElements }\n","/** @module autocomplete/css */\n\nimport { PrismEditor } from \"../../../index.js\"\nimport { getClosestToken } from \"../../../utils/index.js\"\nimport { getLineStart } from \"../../../utils/local.js\"\nimport { Bracket } from \"../../matchBrackets/index.js\"\nimport { htmlTags } from \"../markup/index.js\"\nimport { Completion, CompletionContext, CompletionSource } from \"../types.js\"\nimport { findWords } from \"../utils.js\"\nimport { atRules, cssValues, pseudoClasses, pseudoElements } from \"./data.js\"\n\nconst hasStyleRules = [\"container\", \"supports\", \"layer\", \"media\", \"scope\"]\n\nconst atRule = /@([\\w-]*)(?!\\w|-)(?:[^;{\"']|\"(?:\\\\[\\s\\S]|[^\\\\\\n\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\\\n'])*')*$/\n\nconst tagNames: Completion[] = Object.keys(htmlTags).map(tag => ({ label: tag, icon: \"keyword\" }))\n\nconst getCSSProperties = () => {\n\tif (!properties) {\n\t\tproperties = []\n\t\tconst style = document.body.style\n\t\tconst seen = new Set<string>()\n\t\tfor (let key in style) {\n\t\t\tif (typeof style[key] == \"string\" && !/-|^moz|^webkit/i.test(key)) {\n\t\t\t\tkey = key.replace(/[A-Z]/g, char => \"-\" + char.toLowerCase())\n\t\t\t\tif (!seen.has(key)) {\n\t\t\t\t\tseen.add(key)\n\t\t\t\t\tproperties.push({\n\t\t\t\t\t\tlabel: key,\n\t\t\t\t\t\ticon: \"property\",\n\t\t\t\t\t\tinsert: key + \": ;\",\n\t\t\t\t\t\ttabStops: [key.length + 2],\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn properties\n}\n\n/**\n * Completion source for CSS that adds completion for HTML tags, pseudo-elements,\n * pseudo-classes, classes, CSS variables, at-rules, CSS properties and property values.\n * Requires the `css-extras` grammar and bracket matching extension to work correctly.\n * @param classes List of class names that should be completed even if they're not found\n * in the editor. Each string must be prefixed with `.`.\n * @param variables List of CSS variables that should be completed even if they're not\n * found in the editor. Each string must be prefixed with `--`.\n * @returns A completion source.\n */\nconst cssCompletion = (\n\tclasses?: Iterable<string>,\n\tvariables?: Iterable<string>,\n): CompletionSource => {\n\treturn (context: CompletionContext, editor: PrismEditor) => {\n\t\tlet before = context.before\n\t\tlet pos = context.pos\n\t\tlet matcher = editor.extensions.matchBrackets\n\t\tlet from = context.lineBefore.search(/[\\w-]*$/) + getLineStart(before, pos)\n\t\tlet options: Completion[] | undefined\n\t\tlet currentStatement = before\n\t\t\t.slice(Math.max(...[\"{\", \"}\", \";\"].map(c => before.lastIndexOf(c) + 1)))\n\t\t\t.trimStart()\n\n\t\tif (getClosestToken(editor, \".comment,.string\", 0, 0, pos)) return\n\n\t\tif (getClosestToken(editor, \".tag\", 0, 0, pos)) {\n\t\t\toptions = currentStatement.includes(\":\") ? cssValues : getCSSProperties()\n\t\t} else {\n\t\t\tconst atRuleMatch = atRule.exec(before)\n\n\t\t\tif (atRuleMatch) {\n\t\t\t\tif (atRuleMatch.index + atRuleMatch[1].length + 2 > pos) {\n\t\t\t\t\tfrom--\n\t\t\t\t\toptions = atRules\n\t\t\t\t}\n\t\t\t} else if (matcher) {\n\t\t\t\tlet { brackets, pairs } = matcher\n\t\t\t\tlet i = 0\n\t\t\t\tlet bracket: Bracket\n\t\t\t\tlet inSelector = true\n\t\t\t\tlet charBefore = before[from - 1]\n\t\t\t\tfor (; (bracket = brackets[i]); i++) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tbracket[3] == \"{\" &&\n\t\t\t\t\t\tbracket[1] < pos &&\n\t\t\t\t\t\tbrackets[pairs[i]!]?.[5] > pos &&\n\t\t\t\t\t\t!hasStyleRules.includes(before.slice(0, bracket[1]).match(atRule)?.[1]!)\n\t\t\t\t\t) {\n\t\t\t\t\t\tinSelector = \"&+>~:.#[\".includes(currentStatement[0])\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (inSelector) {\n\t\t\t\t\tif (!/\\[[^\\]]*$/.test(currentStatement)) {\n\t\t\t\t\t\tif (charBefore == \":\") {\n\t\t\t\t\t\t\tif (before[from - 2] == \":\") {\n\t\t\t\t\t\t\t\tfrom -= 2\n\t\t\t\t\t\t\t\toptions = pseudoElements\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfrom--\n\t\t\t\t\t\t\t\toptions = pseudoClasses\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (charBefore == \".\") {\n\t\t\t\t\t\t\toptions = findWords(\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\ttype => type == \"selector\" || type == \"class\",\n\t\t\t\t\t\t\t\t/.+/g,\n\t\t\t\t\t\t\t\tclasses,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t).map(name => ({ label: name, icon: \"keyword\" }))\n\t\t\t\t\t\t\tfrom--\n\t\t\t\t\t\t} else if (charBefore != \"#\") options = tagNames\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toptions = findWords(\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\ttype => type == \"variable\",\n\t\t\t\t\t\t/.+/g,\n\t\t\t\t\t\tvariables,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t).map(name => ({\n\t\t\t\t\t\tlabel: name,\n\t\t\t\t\t}))\n\t\t\t\t\toptions.push(...(currentStatement.includes(\":\") ? cssValues : getCSSProperties()))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (options && (from < pos || context.explicit)) {\n\t\t\treturn {\n\t\t\t\tfrom,\n\t\t\t\toptions,\n\t\t\t}\n\t\t}\n\t}\n}\n\nlet properties: Completion[]\n\nexport { cssCompletion, cssValues, pseudoClasses, pseudoElements, atRules, getCSSProperties }\n"],"names":[],"mappings":"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"}